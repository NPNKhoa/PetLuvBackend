// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomApi.Infrastructure.Data;

#nullable disable

namespace RoomApi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(RoomDbContext))]
    [Migration("20250419175910_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoomApi.Domain.Entities.AgreeableBreed", b =>
                {
                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BreedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomId", "BreedId");

                    b.ToTable("AgreeableBreeds");

                    b.HasData(
                        new
                        {
                            RoomId = new Guid("320b9a5c-9d10-4bb3-995c-0748afed26be"),
                            BreedId = new Guid("aaae8a7b-abd1-4169-0383-08dd6a9d0b8b")
                        },
                        new
                        {
                            RoomId = new Guid("fef78c40-202a-482c-a9fd-0cf9e5756bb6"),
                            BreedId = new Guid("aaae8a7b-abd1-4169-0383-08dd6a9d0b8b")
                        },
                        new
                        {
                            RoomId = new Guid("fef78c40-202a-482c-a9fd-0cf9e5756bb6"),
                            BreedId = new Guid("f5614fe7-b506-4379-d3fa-08dd53047a20")
                        },
                        new
                        {
                            RoomId = new Guid("60bc2bbd-1ac1-48b5-a45e-47b0bbbbd054"),
                            BreedId = new Guid("aaae8a7b-abd1-4169-0383-08dd6a9d0b8b")
                        },
                        new
                        {
                            RoomId = new Guid("60bc2bbd-1ac1-48b5-a45e-47b0bbbbd054"),
                            BreedId = new Guid("f5614fe7-b506-4379-d3fa-08dd53047a20")
                        });
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = new Guid("dd027e4c-06d4-409d-8d3c-58d9d55261fe"),
                            IsVisible = true,
                            PricePerDay = 300000m,
                            PricePerHour = 50000m,
                            RoomDesc = "Phòng nhỏ, phù hợp chó con",
                            RoomName = "Phòng 101",
                            RoomTypeId = new Guid("54d7e43b-ebd8-428d-8df1-825be9141de8")
                        },
                        new
                        {
                            RoomId = new Guid("320b9a5c-9d10-4bb3-995c-0748afed26be"),
                            IsVisible = true,
                            PricePerDay = 500000m,
                            PricePerHour = 80000m,
                            RoomDesc = "Phòng VIP cho mèo quý tộc",
                            RoomName = "Phòng 202",
                            RoomTypeId = new Guid("059bc604-cb72-46fa-b1a1-2540c041093a")
                        },
                        new
                        {
                            RoomId = new Guid("fef78c40-202a-482c-a9fd-0cf9e5756bb6"),
                            IsVisible = true,
                            PricePerDay = 450000m,
                            PricePerHour = 70000m,
                            RoomDesc = "Phòng gia đình, cho mèo",
                            RoomName = "Phòng 303",
                            RoomTypeId = new Guid("2c5147ae-5d4a-40e3-a3a3-4c7028c2169b")
                        },
                        new
                        {
                            RoomId = new Guid("60bc2bbd-1ac1-48b5-a45e-47b0bbbbd054"),
                            IsVisible = true,
                            PricePerDay = 600000m,
                            PricePerHour = 90000m,
                            RoomDesc = "Phòng nhỏ cho mèo",
                            RoomName = "Phòng 404",
                            RoomTypeId = new Guid("54d7e43b-ebd8-428d-8df1-825be9141de8")
                        });
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomAccessory", b =>
                {
                    b.Property<Guid>("RoomAccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("RoomAccessoryDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RoomAccessoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomAccessoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomAccessoryId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomAccessories");

                    b.HasData(
                        new
                        {
                            RoomAccessoryId = new Guid("315877c2-c057-4f35-80b0-1af37b84529d"),
                            IsVisible = true,
                            RoomAccessoryDesc = "Khay vệ sinh cho mèo",
                            RoomAccessoryImagePath = "khaycat.jpg",
                            RoomAccessoryName = "Khay cát",
                            RoomTypeId = new Guid("2c5147ae-5d4a-40e3-a3a3-4c7028c2169b"),
                            ServiceId = new Guid("fb42c512-3dd6-4fce-8a97-a683522ad691")
                        },
                        new
                        {
                            RoomAccessoryId = new Guid("46d6e8c3-4c53-4b2a-80c6-0f9138b49e7d"),
                            IsVisible = true,
                            RoomAccessoryDesc = "Cho mèo chơi và tập thể dục",
                            RoomAccessoryImagePath = "cayleo.jpg",
                            RoomAccessoryName = "Cây leo",
                            RoomTypeId = new Guid("059bc604-cb72-46fa-b1a1-2540c041093a"),
                            ServiceId = new Guid("3591729e-3199-4bce-95e4-c502b8907e8c")
                        },
                        new
                        {
                            RoomAccessoryId = new Guid("56ce2368-f739-465b-ba7d-7f81a98309c0"),
                            IsVisible = true,
                            RoomAccessoryDesc = "Quan sát thú cưng từ xa",
                            RoomAccessoryImagePath = "camera.jpg",
                            RoomAccessoryName = "Camera",
                            RoomTypeId = new Guid("059bc604-cb72-46fa-b1a1-2540c041093a"),
                            ServiceId = new Guid("92432a57-5845-42a8-bdf2-c5c8c84c43a9")
                        });
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomImage", b =>
                {
                    b.Property<string>("RoomImagePath")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomImagePath");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");

                    b.HasData(
                        new
                        {
                            RoomImagePath = "101.jpg",
                            RoomId = new Guid("dd027e4c-06d4-409d-8d3c-58d9d55261fe")
                        },
                        new
                        {
                            RoomImagePath = "202.jpg",
                            RoomId = new Guid("320b9a5c-9d10-4bb3-995c-0748afed26be")
                        },
                        new
                        {
                            RoomImagePath = "303.jpg",
                            RoomId = new Guid("fef78c40-202a-482c-a9fd-0cf9e5756bb6")
                        },
                        new
                        {
                            RoomImagePath = "404.jpg",
                            RoomId = new Guid("60bc2bbd-1ac1-48b5-a45e-47b0bbbbd054")
                        },
                        new
                        {
                            RoomImagePath = "505.jpg",
                            RoomId = new Guid("add075db-a9a0-4107-8dec-d4090b43a305")
                        });
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomType", b =>
                {
                    b.Property<Guid>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("RoomTypeDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = new Guid("54d7e43b-ebd8-428d-8df1-825be9141de8"),
                            IsVisible = true,
                            RoomTypeDesc = "Phòng cơ bản cho thú cưng nhỏ",
                            RoomTypeName = "Phòng Tiêu Chuẩn"
                        },
                        new
                        {
                            RoomTypeId = new Guid("059bc604-cb72-46fa-b1a1-2540c041093a"),
                            IsVisible = true,
                            RoomTypeDesc = "Phòng rộng rãi, tiện nghi cao cấp",
                            RoomTypeName = "Phòng VIP"
                        },
                        new
                        {
                            RoomTypeId = new Guid("2c5147ae-5d4a-40e3-a3a3-4c7028c2169b"),
                            IsVisible = true,
                            RoomTypeDesc = "Dành cho nhiều thú cưng cùng ở",
                            RoomTypeName = "Phòng Gia Đình"
                        });
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.AgreeableBreed", b =>
                {
                    b.HasOne("RoomApi.Domain.Entities.Room", "Room")
                        .WithMany("AgreeableBreeds")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.Room", b =>
                {
                    b.HasOne("RoomApi.Domain.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomAccessory", b =>
                {
                    b.HasOne("RoomApi.Domain.Entities.RoomType", "RoomType")
                        .WithMany("RoomAccessories")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomImage", b =>
                {
                    b.HasOne("RoomApi.Domain.Entities.Room", null)
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.Room", b =>
                {
                    b.Navigation("AgreeableBreeds");

                    b.Navigation("RoomImages");
                });

            modelBuilder.Entity("RoomApi.Domain.Entities.RoomType", b =>
                {
                    b.Navigation("RoomAccessories");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
